// <auto-generated />
using System;
using ASPNETInfrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASPNETInfrastructure.Migrations
{
    [DbContext(typeof(NETContext))]
    [Migration("20220417171319_InitialFile")]
    partial class InitialFile
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASPNETInfrastructure.Entities.InstatMatch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AwayTeamScore")
                        .HasColumnType("int");

                    b.Property<int>("HomeTeamScore")
                        .HasColumnType("int");

                    b.Property<Guid?>("InstatAwayTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatHomeTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InstatId")
                        .HasColumnType("int");

                    b.Property<Guid>("InstatTournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstatAwayTeamId");

                    b.HasIndex("InstatHomeTeamId");

                    b.HasIndex("InstatTournamentId");

                    b.ToTable("InstatMatches");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.InstatPlayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InstatPlayerId")
                        .HasColumnType("int");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("InstatPlayers");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.InstatTeam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrentInstatTournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InstatId")
                        .HasColumnType("int");

                    b.Property<string>("InstatName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentInstatTournamentId");

                    b.ToTable("InstatTeams");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.InstatTournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InstatId")
                        .HasColumnType("int");

                    b.Property<string>("InstatName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InstatTournaments");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchCorner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CornersFor")
                        .HasColumnType("int");

                    b.Property<int>("CornersForAt10")
                        .HasColumnType("int");

                    b.Property<int>("CornersForAt20")
                        .HasColumnType("int");

                    b.Property<int>("CornersForAt30")
                        .HasColumnType("int");

                    b.Property<int>("CornersForAt40")
                        .HasColumnType("int");

                    b.Property<int>("CornersForAt50")
                        .HasColumnType("int");

                    b.Property<int>("CornersForAt60")
                        .HasColumnType("int");

                    b.Property<int>("CornersForAt70")
                        .HasColumnType("int");

                    b.Property<int>("CornersForAt80")
                        .HasColumnType("int");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchCorners");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchFoul", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FoulsFor")
                        .HasColumnType("int");

                    b.Property<int>("FoulsForAt10")
                        .HasColumnType("int");

                    b.Property<int>("FoulsForAt20")
                        .HasColumnType("int");

                    b.Property<int>("FoulsForAt30")
                        .HasColumnType("int");

                    b.Property<int>("FoulsForAt40")
                        .HasColumnType("int");

                    b.Property<int>("FoulsForAt50")
                        .HasColumnType("int");

                    b.Property<int>("FoulsForAt60")
                        .HasColumnType("int");

                    b.Property<int>("FoulsForAt70")
                        .HasColumnType("int");

                    b.Property<int>("FoulsForAt80")
                        .HasColumnType("int");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchFouls");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchGoal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GoalsForAt10")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt15")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt20")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt25")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt30")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt35")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt40")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt45")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt50")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt55")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt60")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt65")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt70")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt75")
                        .HasColumnType("int");

                    b.Property<int>("GoalsForAt80")
                        .HasColumnType("int");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchGoals");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchOffside", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OffsidesFor")
                        .HasColumnType("int");

                    b.Property<int>("OffsidesForAt10")
                        .HasColumnType("int");

                    b.Property<int>("OffsidesForAt20")
                        .HasColumnType("int");

                    b.Property<int>("OffsidesForAt30")
                        .HasColumnType("int");

                    b.Property<int>("OffsidesForAt40")
                        .HasColumnType("int");

                    b.Property<int>("OffsidesForAt50")
                        .HasColumnType("int");

                    b.Property<int>("OffsidesForAt60")
                        .HasColumnType("int");

                    b.Property<int>("OffsidesForAt70")
                        .HasColumnType("int");

                    b.Property<int>("OffsidesForAt80")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchOffsides");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchPossession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("OverallPossession")
                        .HasColumnType("float");

                    b.Property<double>("OverallPossession0to10")
                        .HasColumnType("float");

                    b.Property<double>("OverallPossession10to20")
                        .HasColumnType("float");

                    b.Property<double>("OverallPossession20to30")
                        .HasColumnType("float");

                    b.Property<double>("OverallPossession30to40")
                        .HasColumnType("float");

                    b.Property<double>("OverallPossession40to50")
                        .HasColumnType("float");

                    b.Property<double>("OverallPossession50to60")
                        .HasColumnType("float");

                    b.Property<double>("OverallPossession60to70")
                        .HasColumnType("float");

                    b.Property<double>("OverallPossession70to80")
                        .HasColumnType("float");

                    b.Property<double>("OverallPossession80to90")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchPossession");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchRed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RedsFor")
                        .HasColumnType("int");

                    b.Property<int>("RedsForAt10")
                        .HasColumnType("int");

                    b.Property<int>("RedsForAt20")
                        .HasColumnType("int");

                    b.Property<int>("RedsForAt30")
                        .HasColumnType("int");

                    b.Property<int>("RedsForAt40")
                        .HasColumnType("int");

                    b.Property<int>("RedsForAt50")
                        .HasColumnType("int");

                    b.Property<int>("RedsForAt60")
                        .HasColumnType("int");

                    b.Property<int>("RedsForAt70")
                        .HasColumnType("int");

                    b.Property<int>("RedsForAt80")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchReds");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchShot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ShotsForAt10")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt15")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt20")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt25")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt30")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt35")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt40")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt45")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt50")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt55")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt60")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt65")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt70")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt75")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt80")
                        .HasColumnType("int");

                    b.Property<int>("ShotsForAt85")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchShots");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchShotsInBox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ShotsInBoxForAt10")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt15")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt20")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt25")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt30")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt35")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt40")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt45")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt50")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt55")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt60")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt65")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt70")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt75")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt80")
                        .HasColumnType("int");

                    b.Property<int>("ShotsInBoxForAt85")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchShotsInBox");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchShotsOnTarget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ShotsOnForAt10")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt15")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt20")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt25")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt30")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt35")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt40")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt45")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt50")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt55")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt60")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt65")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt70")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt75")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt80")
                        .HasColumnType("int");

                    b.Property<int>("ShotsOnForAt85")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchShotsOnTarget");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchThrowIn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ThrowInFor")
                        .HasColumnType("int");

                    b.Property<int>("ThrowInForAt10")
                        .HasColumnType("int");

                    b.Property<int>("ThrowInForAt20")
                        .HasColumnType("int");

                    b.Property<int>("ThrowInForAt30")
                        .HasColumnType("int");

                    b.Property<int>("ThrowInForAt40")
                        .HasColumnType("int");

                    b.Property<int>("ThrowInForAt50")
                        .HasColumnType("int");

                    b.Property<int>("ThrowInForAt60")
                        .HasColumnType("int");

                    b.Property<int>("ThrowInForAt70")
                        .HasColumnType("int");

                    b.Property<int>("ThrowInForAt80")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchThrowIns");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchXG", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("XgAt10")
                        .HasColumnType("float");

                    b.Property<double>("XgAt15")
                        .HasColumnType("float");

                    b.Property<double>("XgAt20")
                        .HasColumnType("float");

                    b.Property<double>("XgAt25")
                        .HasColumnType("float");

                    b.Property<double>("XgAt30")
                        .HasColumnType("float");

                    b.Property<double>("XgAt35")
                        .HasColumnType("float");

                    b.Property<double>("XgAt40")
                        .HasColumnType("float");

                    b.Property<double>("XgAt45")
                        .HasColumnType("float");

                    b.Property<double>("XgAt50")
                        .HasColumnType("float");

                    b.Property<double>("XgAt55")
                        .HasColumnType("float");

                    b.Property<double>("XgAt60")
                        .HasColumnType("float");

                    b.Property<double>("XgAt65")
                        .HasColumnType("float");

                    b.Property<double>("XgAt70")
                        .HasColumnType("float");

                    b.Property<double>("XgAt75")
                        .HasColumnType("float");

                    b.Property<double>("XgAt80")
                        .HasColumnType("float");

                    b.Property<double>("XgAt85")
                        .HasColumnType("float");

                    b.Property<double>("XgFirstHalf")
                        .HasColumnType("float");

                    b.Property<double>("XgSecondHalf")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchXG");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchYellow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("YellowsFor")
                        .HasColumnType("int");

                    b.Property<int>("YellowsForAt10")
                        .HasColumnType("int");

                    b.Property<int>("YellowsForAt20")
                        .HasColumnType("int");

                    b.Property<int>("YellowsForAt30")
                        .HasColumnType("int");

                    b.Property<int>("YellowsForAt40")
                        .HasColumnType("int");

                    b.Property<int>("YellowsForAt50")
                        .HasColumnType("int");

                    b.Property<int>("YellowsForAt60")
                        .HasColumnType("int");

                    b.Property<int>("YellowsForAt70")
                        .HasColumnType("int");

                    b.Property<int>("YellowsForAt80")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("MatchYellows");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.PlayerMatchDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GoalsScored")
                        .HasColumnType("int");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatPlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InstatPositionId")
                        .HasColumnType("int");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MinutesPlayed")
                        .HasColumnType("float");

                    b.Property<int>("RedCards")
                        .HasColumnType("int");

                    b.Property<int?>("ShirtNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Start")
                        .HasColumnType("bit");

                    b.Property<bool>("Sub")
                        .HasColumnType("bit");

                    b.Property<int>("YellowCards")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatPlayerId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("PlayerMatchDetails");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.PlayerMatchRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatMatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstatPlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InstatSeasonId")
                        .HasColumnType("int");

                    b.Property<Guid?>("InstatTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PlayerRating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("InstatMatchId");

                    b.HasIndex("InstatPlayerId");

                    b.HasIndex("InstatTeamId");

                    b.ToTable("PlayerMatchRatings");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.InstatMatch", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatAwayTeam")
                        .WithMany()
                        .HasForeignKey("InstatAwayTeamId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatHomeTeam")
                        .WithMany()
                        .HasForeignKey("InstatHomeTeamId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTournament", "Tournament")
                        .WithMany()
                        .HasForeignKey("InstatTournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstatAwayTeam");

                    b.Navigation("InstatHomeTeam");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.InstatPlayer", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.InstatTeam", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatTournament", "CurrentInstatTournament")
                        .WithMany()
                        .HasForeignKey("CurrentInstatTournamentId");

                    b.Navigation("CurrentInstatTournament");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchCorner", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchFoul", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchGoal", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchOffside", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchPossession", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchRed", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchShot", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchShotsInBox", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchShotsOnTarget", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchThrowIn", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchXG", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.MatchYellow", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.PlayerMatchDetail", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatPlayer", "InstatPlayer")
                        .WithMany()
                        .HasForeignKey("InstatPlayerId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatPlayer");

                    b.Navigation("InstatTeam");
                });

            modelBuilder.Entity("ASPNETInfrastructure.Entities.PlayerMatchRating", b =>
                {
                    b.HasOne("ASPNETInfrastructure.Entities.InstatMatch", "InstatMatch")
                        .WithMany()
                        .HasForeignKey("InstatMatchId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatPlayer", "InstatPlayer")
                        .WithMany()
                        .HasForeignKey("InstatPlayerId");

                    b.HasOne("ASPNETInfrastructure.Entities.InstatTeam", "InstatTeam")
                        .WithMany()
                        .HasForeignKey("InstatTeamId");

                    b.Navigation("InstatMatch");

                    b.Navigation("InstatPlayer");

                    b.Navigation("InstatTeam");
                });
#pragma warning restore 612, 618
        }
    }
}
